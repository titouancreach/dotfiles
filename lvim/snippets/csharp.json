{
    "hbcontroller": {
        "prefix": "hbcontroller",
        "body": [
            "using FunctionalToolkit.AspNetCore;",
            "using HouseBase.Common.Services;",
            "using Microsoft.AspNetCore.Authorization;",
            "using Microsoft.AspNetCore.Mvc;",
            "using HouseBase.Api.Features.RequestInfo;",
            "",
            "namespace HouseBase.Api.Features.$0",
            "",
            "[Authorize]",
            "[ApiController]",
            "[Route(\"[controller]/[action]\")]",
            "public class ${TM_FILENAME_BASE} : ControllerBase",
            "{",
            "    private readonly IDbConnectionService _dbConnectionService;",
            "    private readonly ResponseMaker _response;",
            "    private readonly RequestInfoService _claims;",
            "    private readonly ILogger<${TM_FILENAME_BASE}> _logger;",
            "",
            "    public ${TM_FILENAME_BASE}(",
            "        IDbConnectionService dbConnectionService,",
            "        ResponseMaker responseMaker,",
            "        RequestInfoService claims,",
            "        ILogger<${TM_FILENAME_BASE}> logger)",
            "    {",
            "        _dbConnectionService = dbConnectionService;",
            "        _response = responseMaker;",
            "        _claims = claims;",
            "        _logger = logger;",
            "    }",
            "}",
            ""
        ],
        "description": "Create a Housebase Controller"
    },

    "hbget": {
        "prefix": "hbget",
        "body": [
            "[HttpGet]",
            "public async Task<ResponseModel<$0>> Get()",
            "{",
            "    var db = _dbConnectionService.GetDbConnection();",
            "    return _response.Success<$0>(default);",
            "}"

        ]
    },

    "hbpost": {
        "prefix": "hbpost",
        "body": [
            "[HttpPost]",
            "public async Task<ResponseModel<$0>> Post()",
            "{",
            "    var db = _dbConnectionService.GetDbConnection();",
            "    return _response.Success<$0>(default);",
            "}"
        ]
    },

    "maybe": {
        "prefix": "mb",
        "body": [
            "Maybe<$0>"
        ]
    },

    "result": {
        "prefix": "rs",
        "body": [
            "Result<$0>"
        ]
    }
}
